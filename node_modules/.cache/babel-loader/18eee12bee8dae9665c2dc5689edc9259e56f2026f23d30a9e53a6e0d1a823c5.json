{"ast":null,"code":"var _jsxFileName = \"/Users/williamyen/Documents/vscodeProjects/syllabusExtraction/syllabus-extractor/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as mammoth from 'mammoth';\nimport { Parser } from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SyllabusParser() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [extractedEvents, setExtractedEvents] = useState(null);\n  const [processingStep, setProcessingStep] = useState('');\n\n  // Process the uploaded file\n  const handleFileUpload = async e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setFileName(uploadedFile.name);\n    setError('');\n    setExtractedText('');\n    setExtractedEvents(null);\n  };\n\n  // Extract text from different file types\n  const extractTextFromFile = async () => {\n    if (!file) {\n      setError('Please upload a file first');\n      return '';\n    }\n    setLoading(true);\n    setProcessingStep('Extracting text from file...');\n    try {\n      let text = '';\n      const fileType = file.name.split('.').pop().toLowerCase();\n      if (fileType === 'pdf') {\n        // Handle PDF files\n        const arrayBuffer = await file.arrayBuffer();\n        const uint8Array = new Uint8Array(arrayBuffer);\n\n        // Direct PDF text extraction\n        const pdfText = await extractPDFText(uint8Array);\n        text = pdfText;\n      } else if (fileType === 'docx') {\n        // Handle DOCX files using Mammoth\n        const arrayBuffer = await file.arrayBuffer();\n        const result = await mammoth.extractRawText({\n          arrayBuffer\n        });\n        text = result.value;\n      } else if (fileType === 'txt') {\n        // Handle plain text files\n        text = await file.text();\n      } else {\n        throw new Error(`Unsupported file type: ${fileType}`);\n      }\n      setExtractedText(text);\n      return text;\n    } catch (err) {\n      setError(`Failed to extract text: ${err.message}`);\n      return '';\n    }\n  };\n\n  // Extract text from PDF using a hypothetical function\n  // In real implementation, you would use a library like pdf.js\n  const extractPDFText = async pdfData => {\n    // This is a placeholder for PDF extraction\n    // We'll use a mock implementation for now since we can't directly integrate pdf.js here\n    return new Promise(resolve => {\n      // Simulate PDF text extraction\n      setTimeout(() => {\n        resolve(extractedText);\n      }, 1000);\n    });\n  };\n\n  // Process the text with a hypothetical LLM to extract events\n  const processWithLLM = async text => {\n    if (!text) return null;\n    setProcessingStep('Analyzing text with language model...');\n    try {\n      // This is where you would send the text to an actual LLM API\n      // For now, we'll simulate the response with a mock function\n      const events = await mockLLMProcessing(text);\n      return events;\n    } catch (err) {\n      setError(`Failed to process with LLM: ${err.message}`);\n      return null;\n    }\n  };\n\n  // Mock LLM processing function\n  const mockLLMProcessing = async text => {\n    // This is a placeholder. In a real implementation, you would call an actual LLM API\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // Simulate LLM processing with sample data\n        resolve({\n          classTimes: [{\n            day: 'MWF',\n            time: '10:00 AM - 11:15 AM',\n            location: 'Science Building 101'\n          }, {\n            day: 'TTH',\n            time: '2:30 PM - 3:45 PM',\n            location: 'Engineering Hall 305'\n          }],\n          assignments: [{\n            name: 'Homework 1',\n            due: '2025-06-01',\n            description: 'Problem set on chapters 1-3'\n          }, {\n            name: 'Project Proposal',\n            due: '2025-06-15',\n            description: 'One-page outline of final project'\n          }, {\n            name: 'Lab Report',\n            due: '2025-06-30',\n            description: 'Write-up of lab experiment results'\n          }],\n          exams: [{\n            name: 'Midterm 1',\n            date: '2025-06-10',\n            time: '10:00 AM - 12:00 PM',\n            location: 'Main Hall 100'\n          }, {\n            name: 'Midterm 2',\n            date: '2025-07-08',\n            time: '10:00 AM - 12:00 PM',\n            location: 'Main Hall 100'\n          }, {\n            name: 'Final Exam',\n            date: '2025-08-05',\n            time: '1:00 PM - 4:00 PM',\n            location: 'University Arena'\n          }],\n          officehours: [{\n            day: 'Monday',\n            time: '1:00 PM - 3:00 PM',\n            location: 'Faculty Office 210'\n          }, {\n            day: 'Thursday',\n            time: '11:00 AM - 12:00 PM',\n            location: 'Online via Zoom'\n          }]\n        });\n      }, 2000);\n    });\n  };\n\n  // Handle the entire process\n  const processFile = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      // Extract text from the file\n      const text = await extractTextFromFile();\n      if (!text) {\n        setLoading(false);\n        return;\n      }\n\n      // Process with LLM\n      const events = await processWithLLM(text);\n      setExtractedEvents(events);\n      setProcessingStep('Complete!');\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  // Convert events to iCal format\n  const generateICalendar = () => {\n    if (!extractedEvents) return '';\n    let icalContent = ['BEGIN:VCALENDAR', 'VERSION:2.0', 'PRODID:-//Syllabus Parser//EN'];\n\n    // Process class times as recurring events\n    extractedEvents.classTimes.forEach((classTime, index) => {\n      // Parse the days\n      const days = parseDays(classTime.day);\n\n      // For each day, create a recurring event\n      days.forEach(day => {\n        const [startTime, endTime] = parseTimeRange(classTime.time);\n\n        // Create a start date for this semester (would come from user input in real app)\n        const startDate = new Date('2025-05-25'); // Example semester start\n\n        // Adjust to the first occurrence of this day\n        while (startDate.getDay() !== dayToNumber(day)) {\n          startDate.setDate(startDate.getDate() + 1);\n        }\n        const dateStr = formatDate(startDate);\n        const eventId = `class-${index}-${day}`;\n        icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Class - ${classTime.day}`, `LOCATION:${classTime.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'RRULE:FREQ=WEEKLY;COUNT=15',\n        // Recurring for 15 weeks\n        'END:VEVENT');\n      });\n    });\n\n    // Process assignments\n    extractedEvents.assignments.forEach((assignment, index) => {\n      const eventId = `assignment-${index}`;\n      const dateStr = assignment.due.replace(/-/g, '');\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Due: ${assignment.name}`, `DESCRIPTION:${assignment.description}`, `DTSTART:${dateStr}T235900`, `DTEND:${dateStr}T235900`, 'END:VEVENT');\n    });\n\n    // Process exams\n    extractedEvents.exams.forEach((exam, index) => {\n      const eventId = `exam-${index}`;\n      const dateStr = exam.date.replace(/-/g, '');\n      const [startTime, endTime] = parseTimeRange(exam.time);\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:${exam.name}`, `LOCATION:${exam.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'END:VEVENT');\n    });\n\n    // Process office hours as recurring events\n    extractedEvents.officehours.forEach((officeHour, index) => {\n      const day = officeHour.day;\n      const [startTime, endTime] = parseTimeRange(officeHour.time);\n\n      // Create a start date for this semester\n      const startDate = new Date('2025-05-25'); // Example semester start\n\n      // Adjust to the first occurrence of this day\n      while (startDate.getDay() !== dayNameToNumber(day)) {\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      const dateStr = formatDate(startDate);\n      const eventId = `officehour-${index}`;\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Office Hours`, `LOCATION:${officeHour.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'RRULE:FREQ=WEEKLY;COUNT=15',\n      // Recurring for 15 weeks\n      'END:VEVENT');\n    });\n    icalContent.push('END:VCALENDAR');\n    return icalContent.join('\\r\\n');\n  };\n\n  // Helper functions for iCal generation\n  const parseDays = dayString => {\n    // Parse day strings like \"MWF\" or \"TTH\"\n    const mapping = {\n      'M': 'Monday',\n      'T': 'Tuesday',\n      'W': 'Wednesday',\n      'TH': 'Thursday',\n      'F': 'Friday'\n    };\n    let days = [];\n    if (dayString === 'MWF') {\n      days = ['Monday', 'Wednesday', 'Friday'];\n    } else if (dayString === 'TTH' || dayString === 'TR') {\n      days = ['Tuesday', 'Thursday'];\n    } else {\n      // Try to parse other formats\n      if (dayString.includes('M')) days.push('Monday');\n      if (dayString.includes('T') && !dayString.includes('TH')) days.push('Tuesday');\n      if (dayString.includes('W')) days.push('Wednesday');\n      if (dayString.includes('TH')) days.push('Thursday');\n      if (dayString.includes('F')) days.push('Friday');\n    }\n    return days;\n  };\n  const parseTimeRange = timeString => {\n    // Parse time strings like \"10:00 AM - 11:15 AM\"\n    const parts = timeString.split('-').map(part => part.trim());\n    if (parts.length !== 2) return ['100000', '110000']; // Default if parsing fails\n\n    try {\n      const startTimeParts = parts[0].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      const endTimeParts = parts[1].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      if (!startTimeParts || !endTimeParts) return ['100000', '110000'];\n      let startHour = parseInt(startTimeParts[1]);\n      let startMinute = startTimeParts[2] ? parseInt(startTimeParts[2]) : 0;\n      const startAmPm = startTimeParts[3] ? startTimeParts[3].toUpperCase() : null;\n      let endHour = parseInt(endTimeParts[1]);\n      let endMinute = endTimeParts[2] ? parseInt(endTimeParts[2]) : 0;\n      const endAmPm = endTimeParts[3] ? endTimeParts[3].toUpperCase() : null;\n\n      // Handle special cases like \"noon\"\n      if (parts[0].toLowerCase().includes('noon')) {\n        startHour = 12;\n        startMinute = 0;\n      }\n\n      // Adjust for AM/PM\n      if (startAmPm === 'PM' && startHour < 12) startHour += 12;\n      if (startAmPm === 'AM' && startHour === 12) startHour = 0;\n      if (endAmPm === 'PM' && endHour < 12) endHour += 12;\n      if (endAmPm === 'AM' && endHour === 12) endHour = 0;\n      const startTimeString = `${startHour.toString().padStart(2, '0')}${startMinute.toString().padStart(2, '0')}00`;\n      const endTimeString = `${endHour.toString().padStart(2, '0')}${endMinute.toString().padStart(2, '0')}00`;\n      return [startTimeString, endTimeString];\n    } catch (e) {\n      return ['100000', '110000']; // Default if parsing fails\n    }\n  };\n  const dayToNumber = day => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[day] || 0;\n  };\n  const dayNameToNumber = dayName => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[dayName] || 0;\n  };\n  const formatDate = date => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}${month}${day}`;\n  };\n  const formatTime = timeString => {\n    // Already in format HHMMSS\n    return timeString;\n  };\n\n  // Download the calendar file\n  const downloadCalendar = () => {\n    const icalContent = generateICalendar();\n    const blob = new Blob([icalContent], {\n      type: 'text/calendar'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_calendar.ics';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download extracted events as JSON\n  const downloadJson = () => {\n    if (!extractedEvents) return;\n    const json = JSON.stringify(extractedEvents, null, 2);\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_events.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4 bg-gray-50 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Syllabus Date Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-white rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Step 1: Upload Syllabus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center border-2 border-dashed border-gray-300 p-6 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileUpload,\n          accept: \".pdf,.docx,.txt\",\n          className: \"hidden\",\n          id: \"file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"cursor-pointer bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\",\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-600\",\n          children: \"Supports PDF, DOCX, and TXT files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), fileName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-medium\",\n            children: \"Selected file:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-blue-600\",\n            children: fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-white rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Step 2: Extract Important Dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processFile,\n        disabled: !file || loading,\n        className: `w-full py-2 rounded transition ${!file || loading ? 'bg-gray-300 cursor-not-allowed' : 'bg-green-500 text-white hover:bg-green-600'}`,\n        children: loading ? 'Processing...' : 'Extract Dates from Syllabus'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-200 rounded-full h-2.5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 h-2.5 rounded-full w-3/4 animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: processingStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-3 bg-red-100 text-red-700 rounded\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), extractedEvents && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-white rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: \"Step 3: Review Extracted Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-blue-800 mb-2\",\n          children: \"Class Schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-3 rounded\",\n          children: extractedEvents.classTimes.map((classTime, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 last:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [classTime.day, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), \" \", classTime.time, classTime.location && ` at ${classTime.location}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this)\n          }, `class-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-blue-800 mb-2\",\n          children: \"Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-3 rounded\",\n          children: extractedEvents.assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 last:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [assignment.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this), \" Due \", new Date(assignment.due).toLocaleDateString(), assignment.description && ` - ${assignment.description}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this)\n          }, `assignment-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-blue-800 mb-2\",\n          children: \"Exams & Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-3 rounded\",\n          children: extractedEvents.exams.map((exam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 last:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [exam.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 21\n              }, this), \" \", new Date(exam.date).toLocaleDateString(), \" at \", exam.time, exam.location && ` in ${exam.location}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 19\n            }, this)\n          }, `exam-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-medium text-blue-800 mb-2\",\n          children: \"Office Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-3 rounded\",\n          children: extractedEvents.officehours.map((officeHour, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 last:mb-0\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [officeHour.day, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this), \" \", officeHour.time, officeHour.location && ` at ${officeHour.location}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 19\n            }, this)\n          }, `office-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 flex flex-col md:flex-row gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadCalendar,\n          className: \"flex-1 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"Download iCalendar File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadJson,\n          className: \"flex-1 bg-gray-700 text-white py-2 px-4 rounded hover:bg-gray-800 transition flex items-center justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: \"Download JSON Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            className: \"h-5 w-5\",\n            viewBox: \"0 0 20 20\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\",\n              clipRule: \"evenodd\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this), extractedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-white rounded shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          className: \"text-lg font-semibold mb-2 cursor-pointer\",\n          children: \"Raw Extracted Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 p-3 bg-gray-50 rounded text-sm font-mono whitespace-pre-wrap max-h-64 overflow-y-auto\",\n          children: extractedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 p-4 bg-blue-50 text-blue-700 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"How It Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: \"This tool extracts important dates and schedule information from your syllabus, including:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside text-sm mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Regular class meeting times (MWF, TTH, etc.)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Assignment due dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Exams, midterms, and finals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Office hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm mt-2\",\n        children: \"The extracted information can be downloaded as an iCalendar file (.ics) that works with most calendar applications including Google Calendar, Apple Calendar, and Microsoft Outlook.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n}\n_s(SyllabusParser, \"jAuY3GQjyqwj5HHnZ5e7L98zTrA=\");\n_c = SyllabusParser;\nvar _c;\n$RefreshReg$(_c, \"SyllabusParser\");","map":{"version":3,"names":["useState","mammoth","Parser","jsxDEV","_jsxDEV","SyllabusParser","_s","file","setFile","fileName","setFileName","loading","setLoading","error","setError","extractedText","setExtractedText","extractedEvents","setExtractedEvents","processingStep","setProcessingStep","handleFileUpload","e","uploadedFile","target","files","name","extractTextFromFile","text","fileType","split","pop","toLowerCase","arrayBuffer","uint8Array","Uint8Array","pdfText","extractPDFText","result","extractRawText","value","Error","err","message","pdfData","Promise","resolve","setTimeout","processWithLLM","events","mockLLMProcessing","classTimes","day","time","location","assignments","due","description","exams","date","officehours","processFile","generateICalendar","icalContent","forEach","classTime","index","days","parseDays","startTime","endTime","parseTimeRange","startDate","Date","getDay","dayToNumber","setDate","getDate","dateStr","formatDate","eventId","push","formatTime","assignment","replace","exam","officeHour","dayNameToNumber","join","dayString","mapping","includes","timeString","parts","map","part","trim","length","startTimeParts","match","endTimeParts","startHour","parseInt","startMinute","startAmPm","toUpperCase","endHour","endMinute","endAmPm","startTimeString","toString","padStart","endTimeString","dayName","year","getFullYear","month","getMonth","downloadCalendar","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","downloadJson","json","JSON","stringify","className","children","_jsxFileName","lineNumber","columnNumber","onChange","accept","id","htmlFor","onClick","disabled","toLocaleDateString","xmlns","viewBox","fill","fillRule","d","clipRule","_c","$RefreshReg$"],"sources":["/Users/williamyen/Documents/vscodeProjects/syllabusExtraction/syllabus-extractor/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport * as mammoth from 'mammoth';\nimport { Parser } from 'papaparse';\n\nexport default function SyllabusParser() {\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [extractedEvents, setExtractedEvents] = useState(null);\n  const [processingStep, setProcessingStep] = useState('');\n\n  // Process the uploaded file\n  const handleFileUpload = async (e) => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n\n    setFile(uploadedFile);\n    setFileName(uploadedFile.name);\n    setError('');\n    setExtractedText('');\n    setExtractedEvents(null);\n  };\n\n  // Extract text from different file types\n  const extractTextFromFile = async () => {\n    if (!file) {\n      setError('Please upload a file first');\n      return '';\n    }\n\n    setLoading(true);\n    setProcessingStep('Extracting text from file...');\n\n    try {\n      let text = '';\n      const fileType = file.name.split('.').pop().toLowerCase();\n\n      if (fileType === 'pdf') {\n        // Handle PDF files\n        const arrayBuffer = await file.arrayBuffer();\n        const uint8Array = new Uint8Array(arrayBuffer);\n        \n        // Direct PDF text extraction\n        const pdfText = await extractPDFText(uint8Array);\n        text = pdfText;\n      } else if (fileType === 'docx') {\n        // Handle DOCX files using Mammoth\n        const arrayBuffer = await file.arrayBuffer();\n        const result = await mammoth.extractRawText({ arrayBuffer });\n        text = result.value;\n      } else if (fileType === 'txt') {\n        // Handle plain text files\n        text = await file.text();\n      } else {\n        throw new Error(`Unsupported file type: ${fileType}`);\n      }\n\n      setExtractedText(text);\n      return text;\n    } catch (err) {\n      setError(`Failed to extract text: ${err.message}`);\n      return '';\n    }\n  };\n\n  // Extract text from PDF using a hypothetical function\n  // In real implementation, you would use a library like pdf.js\n  const extractPDFText = async (pdfData) => {\n    // This is a placeholder for PDF extraction\n    // We'll use a mock implementation for now since we can't directly integrate pdf.js here\n    return new Promise((resolve) => {\n      // Simulate PDF text extraction\n      setTimeout(() => {\n        resolve(extractedText);\n      }, 1000);\n    });\n  };\n\n  // Process the text with a hypothetical LLM to extract events\n  const processWithLLM = async (text) => {\n    if (!text) return null;\n    \n    setProcessingStep('Analyzing text with language model...');\n\n    try {\n      // This is where you would send the text to an actual LLM API\n      // For now, we'll simulate the response with a mock function\n      const events = await mockLLMProcessing(text);\n      return events;\n    } catch (err) {\n      setError(`Failed to process with LLM: ${err.message}`);\n      return null;\n    }\n  };\n\n  // Mock LLM processing function\n  const mockLLMProcessing = async (text) => {\n    // This is a placeholder. In a real implementation, you would call an actual LLM API\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Simulate LLM processing with sample data\n        resolve({\n          classTimes: [\n            { day: 'MWF', time: '10:00 AM - 11:15 AM', location: 'Science Building 101' },\n            { day: 'TTH', time: '2:30 PM - 3:45 PM', location: 'Engineering Hall 305' }\n          ],\n          assignments: [\n            { name: 'Homework 1', due: '2025-06-01', description: 'Problem set on chapters 1-3' },\n            { name: 'Project Proposal', due: '2025-06-15', description: 'One-page outline of final project' },\n            { name: 'Lab Report', due: '2025-06-30', description: 'Write-up of lab experiment results' }\n          ],\n          exams: [\n            { name: 'Midterm 1', date: '2025-06-10', time: '10:00 AM - 12:00 PM', location: 'Main Hall 100' },\n            { name: 'Midterm 2', date: '2025-07-08', time: '10:00 AM - 12:00 PM', location: 'Main Hall 100' },\n            { name: 'Final Exam', date: '2025-08-05', time: '1:00 PM - 4:00 PM', location: 'University Arena' }\n          ],\n          officehours: [\n            { day: 'Monday', time: '1:00 PM - 3:00 PM', location: 'Faculty Office 210' },\n            { day: 'Thursday', time: '11:00 AM - 12:00 PM', location: 'Online via Zoom' }\n          ]\n        });\n      }, 2000);\n    });\n  };\n\n  // Handle the entire process\n  const processFile = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      // Extract text from the file\n      const text = await extractTextFromFile();\n      if (!text) {\n        setLoading(false);\n        return;\n      }\n      \n      // Process with LLM\n      const events = await processWithLLM(text);\n      setExtractedEvents(events);\n      \n      setProcessingStep('Complete!');\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  // Convert events to iCal format\n  const generateICalendar = () => {\n    if (!extractedEvents) return '';\n\n    let icalContent = [\n      'BEGIN:VCALENDAR',\n      'VERSION:2.0',\n      'PRODID:-//Syllabus Parser//EN'\n    ];\n\n    // Process class times as recurring events\n    extractedEvents.classTimes.forEach((classTime, index) => {\n      // Parse the days\n      const days = parseDays(classTime.day);\n      \n      // For each day, create a recurring event\n      days.forEach(day => {\n        const [startTime, endTime] = parseTimeRange(classTime.time);\n        \n        // Create a start date for this semester (would come from user input in real app)\n        const startDate = new Date('2025-05-25'); // Example semester start\n        \n        // Adjust to the first occurrence of this day\n        while (startDate.getDay() !== dayToNumber(day)) {\n          startDate.setDate(startDate.getDate() + 1);\n        }\n        \n        const dateStr = formatDate(startDate);\n        const eventId = `class-${index}-${day}`;\n        \n        icalContent.push(\n          'BEGIN:VEVENT',\n          `UID:${eventId}`,\n          `SUMMARY:Class - ${classTime.day}`,\n          `LOCATION:${classTime.location}`,\n          `DTSTART:${dateStr}T${formatTime(startTime)}`,\n          `DTEND:${dateStr}T${formatTime(endTime)}`,\n          'RRULE:FREQ=WEEKLY;COUNT=15', // Recurring for 15 weeks\n          'END:VEVENT'\n        );\n      });\n    });\n\n    // Process assignments\n    extractedEvents.assignments.forEach((assignment, index) => {\n      const eventId = `assignment-${index}`;\n      const dateStr = assignment.due.replace(/-/g, '');\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:Due: ${assignment.name}`,\n        `DESCRIPTION:${assignment.description}`,\n        `DTSTART:${dateStr}T235900`,\n        `DTEND:${dateStr}T235900`,\n        'END:VEVENT'\n      );\n    });\n\n    // Process exams\n    extractedEvents.exams.forEach((exam, index) => {\n      const eventId = `exam-${index}`;\n      const dateStr = exam.date.replace(/-/g, '');\n      const [startTime, endTime] = parseTimeRange(exam.time);\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:${exam.name}`,\n        `LOCATION:${exam.location}`,\n        `DTSTART:${dateStr}T${formatTime(startTime)}`,\n        `DTEND:${dateStr}T${formatTime(endTime)}`,\n        'END:VEVENT'\n      );\n    });\n\n    // Process office hours as recurring events\n    extractedEvents.officehours.forEach((officeHour, index) => {\n      const day = officeHour.day;\n      const [startTime, endTime] = parseTimeRange(officeHour.time);\n      \n      // Create a start date for this semester\n      const startDate = new Date('2025-05-25'); // Example semester start\n      \n      // Adjust to the first occurrence of this day\n      while (startDate.getDay() !== dayNameToNumber(day)) {\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      \n      const dateStr = formatDate(startDate);\n      const eventId = `officehour-${index}`;\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:Office Hours`,\n        `LOCATION:${officeHour.location}`,\n        `DTSTART:${dateStr}T${formatTime(startTime)}`,\n        `DTEND:${dateStr}T${formatTime(endTime)}`,\n        'RRULE:FREQ=WEEKLY;COUNT=15', // Recurring for 15 weeks\n        'END:VEVENT'\n      );\n    });\n\n    icalContent.push('END:VCALENDAR');\n    return icalContent.join('\\r\\n');\n  };\n\n  // Helper functions for iCal generation\n  const parseDays = (dayString) => {\n    // Parse day strings like \"MWF\" or \"TTH\"\n    const mapping = {\n      'M': 'Monday',\n      'T': 'Tuesday',\n      'W': 'Wednesday',\n      'TH': 'Thursday',\n      'F': 'Friday'\n    };\n    \n    let days = [];\n    if (dayString === 'MWF') {\n      days = ['Monday', 'Wednesday', 'Friday'];\n    } else if (dayString === 'TTH' || dayString === 'TR') {\n      days = ['Tuesday', 'Thursday'];\n    } else {\n      // Try to parse other formats\n      if (dayString.includes('M')) days.push('Monday');\n      if (dayString.includes('T') && !dayString.includes('TH')) days.push('Tuesday');\n      if (dayString.includes('W')) days.push('Wednesday');\n      if (dayString.includes('TH')) days.push('Thursday');\n      if (dayString.includes('F')) days.push('Friday');\n    }\n    \n    return days;\n  };\n\n  const parseTimeRange = (timeString) => {\n    // Parse time strings like \"10:00 AM - 11:15 AM\"\n    const parts = timeString.split('-').map(part => part.trim());\n    if (parts.length !== 2) return ['100000', '110000']; // Default if parsing fails\n    \n    try {\n      const startTimeParts = parts[0].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      const endTimeParts = parts[1].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      \n      if (!startTimeParts || !endTimeParts) return ['100000', '110000'];\n      \n      let startHour = parseInt(startTimeParts[1]);\n      let startMinute = startTimeParts[2] ? parseInt(startTimeParts[2]) : 0;\n      const startAmPm = startTimeParts[3] ? startTimeParts[3].toUpperCase() : null;\n      \n      let endHour = parseInt(endTimeParts[1]);\n      let endMinute = endTimeParts[2] ? parseInt(endTimeParts[2]) : 0;\n      const endAmPm = endTimeParts[3] ? endTimeParts[3].toUpperCase() : null;\n      \n      // Handle special cases like \"noon\"\n      if (parts[0].toLowerCase().includes('noon')) {\n        startHour = 12;\n        startMinute = 0;\n      }\n      \n      // Adjust for AM/PM\n      if (startAmPm === 'PM' && startHour < 12) startHour += 12;\n      if (startAmPm === 'AM' && startHour === 12) startHour = 0;\n      if (endAmPm === 'PM' && endHour < 12) endHour += 12;\n      if (endAmPm === 'AM' && endHour === 12) endHour = 0;\n      \n      const startTimeString = `${startHour.toString().padStart(2, '0')}${startMinute.toString().padStart(2, '0')}00`;\n      const endTimeString = `${endHour.toString().padStart(2, '0')}${endMinute.toString().padStart(2, '0')}00`;\n      \n      return [startTimeString, endTimeString];\n    } catch (e) {\n      return ['100000', '110000']; // Default if parsing fails\n    }\n  };\n\n  const dayToNumber = (day) => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[day] || 0;\n  };\n  \n  const dayNameToNumber = (dayName) => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[dayName] || 0;\n  };\n\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}${month}${day}`;\n  };\n\n  const formatTime = (timeString) => {\n    // Already in format HHMMSS\n    return timeString;\n  };\n\n  // Download the calendar file\n  const downloadCalendar = () => {\n    const icalContent = generateICalendar();\n    const blob = new Blob([icalContent], { type: 'text/calendar' });\n    const url = URL.createObjectURL(blob);\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_calendar.ics';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download extracted events as JSON\n  const downloadJson = () => {\n    if (!extractedEvents) return;\n    \n    const json = JSON.stringify(extractedEvents, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_events.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4 bg-gray-50 rounded-lg shadow\">\n      <h1 className=\"text-2xl font-bold mb-6 text-center\">Syllabus Date Extractor</h1>\n      \n      {/* File upload section */}\n      <div className=\"mb-6 p-4 bg-white rounded shadow\">\n        <h2 className=\"text-lg font-semibold mb-4\">Step 1: Upload Syllabus</h2>\n        <div className=\"flex flex-col items-center justify-center border-2 border-dashed border-gray-300 p-6 rounded\">\n          <input\n            type=\"file\"\n            onChange={handleFileUpload}\n            accept=\".pdf,.docx,.txt\"\n            className=\"hidden\"\n            id=\"file-upload\"\n          />\n          <label \n            htmlFor=\"file-upload\" \n            className=\"cursor-pointer bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition\"\n          >\n            Select File\n          </label>\n          <p className=\"mt-2 text-sm text-gray-600\">Supports PDF, DOCX, and TXT files</p>\n          {fileName && (\n            <div className=\"mt-4 text-center\">\n              <p className=\"font-medium\">Selected file:</p>\n              <p className=\"text-blue-600\">{fileName}</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      {/* Processing section */}\n      <div className=\"mb-6 p-4 bg-white rounded shadow\">\n        <h2 className=\"text-lg font-semibold mb-4\">Step 2: Extract Important Dates</h2>\n        <button\n          onClick={processFile}\n          disabled={!file || loading}\n          className={`w-full py-2 rounded transition ${\n            !file || loading\n              ? 'bg-gray-300 cursor-not-allowed'\n              : 'bg-green-500 text-white hover:bg-green-600'\n          }`}\n        >\n          {loading ? 'Processing...' : 'Extract Dates from Syllabus'}\n        </button>\n        \n        {loading && (\n          <div className=\"mt-4\">\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n              <div className=\"bg-blue-600 h-2.5 rounded-full w-3/4 animate-pulse\"></div>\n            </div>\n            <p className=\"text-sm text-gray-600 mt-2\">{processingStep}</p>\n          </div>\n        )}\n        \n        {error && (\n          <div className=\"mt-4 p-3 bg-red-100 text-red-700 rounded\">\n            {error}\n          </div>\n        )}\n      </div>\n      \n      {/* Results section */}\n      {extractedEvents && (\n        <div className=\"mb-6 p-4 bg-white rounded shadow\">\n          <h2 className=\"text-lg font-semibold mb-4\">Step 3: Review Extracted Information</h2>\n          \n          {/* Class Times */}\n          <div className=\"mb-4\">\n            <h3 className=\"font-medium text-blue-800 mb-2\">Class Schedule</h3>\n            <div className=\"bg-gray-50 p-3 rounded\">\n              {extractedEvents.classTimes.map((classTime, index) => (\n                <div key={`class-${index}`} className=\"mb-2 last:mb-0\">\n                  <p>\n                    <span className=\"font-medium\">{classTime.day}:</span> {classTime.time}\n                    {classTime.location && ` at ${classTime.location}`}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Assignments */}\n          <div className=\"mb-4\">\n            <h3 className=\"font-medium text-blue-800 mb-2\">Assignments</h3>\n            <div className=\"bg-gray-50 p-3 rounded\">\n              {extractedEvents.assignments.map((assignment, index) => (\n                <div key={`assignment-${index}`} className=\"mb-2 last:mb-0\">\n                  <p>\n                    <span className=\"font-medium\">{assignment.name}:</span> Due {new Date(assignment.due).toLocaleDateString()}\n                    {assignment.description && ` - ${assignment.description}`}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Exams */}\n          <div className=\"mb-4\">\n            <h3 className=\"font-medium text-blue-800 mb-2\">Exams & Tests</h3>\n            <div className=\"bg-gray-50 p-3 rounded\">\n              {extractedEvents.exams.map((exam, index) => (\n                <div key={`exam-${index}`} className=\"mb-2 last:mb-0\">\n                  <p>\n                    <span className=\"font-medium\">{exam.name}:</span> {new Date(exam.date).toLocaleDateString()} at {exam.time}\n                    {exam.location && ` in ${exam.location}`}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Office Hours */}\n          <div className=\"mb-4\">\n            <h3 className=\"font-medium text-blue-800 mb-2\">Office Hours</h3>\n            <div className=\"bg-gray-50 p-3 rounded\">\n              {extractedEvents.officehours.map((officeHour, index) => (\n                <div key={`office-${index}`} className=\"mb-2 last:mb-0\">\n                  <p>\n                    <span className=\"font-medium\">{officeHour.day}:</span> {officeHour.time}\n                    {officeHour.location && ` at ${officeHour.location}`}\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          {/* Download options */}\n          <div className=\"mt-6 flex flex-col md:flex-row gap-3\">\n            <button\n              onClick={downloadCalendar}\n              className=\"flex-1 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition flex items-center justify-center\"\n            >\n              <span className=\"mr-2\">Download iCalendar File</span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n            <button\n              onClick={downloadJson}\n              className=\"flex-1 bg-gray-700 text-white py-2 px-4 rounded hover:bg-gray-800 transition flex items-center justify-center\"\n            >\n              <span className=\"mr-2\">Download JSON Data</span>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Extracted Text (Hidden by default) */}\n      {extractedText && (\n        <div className=\"mb-6 p-4 bg-white rounded shadow\">\n          <details>\n            <summary className=\"text-lg font-semibold mb-2 cursor-pointer\">Raw Extracted Text</summary>\n            <div className=\"mt-2 p-3 bg-gray-50 rounded text-sm font-mono whitespace-pre-wrap max-h-64 overflow-y-auto\">\n              {extractedText}\n            </div>\n          </details>\n        </div>\n      )}\n      \n      {/* Help information */}\n      <div className=\"mt-8 p-4 bg-blue-50 text-blue-700 rounded\">\n        <h3 className=\"font-semibold mb-2\">How It Works</h3>\n        <p className=\"text-sm\">\n          This tool extracts important dates and schedule information from your syllabus, including:\n        </p>\n        <ul className=\"list-disc list-inside text-sm mt-2\">\n          <li>Regular class meeting times (MWF, TTH, etc.)</li>\n          <li>Assignment due dates</li>\n          <li>Exams, midterms, and finals</li>\n          <li>Office hours</li>\n        </ul>\n        <p className=\"text-sm mt-2\">\n          The extracted information can be downloaded as an iCalendar file (.ics) that works with \n          most calendar applications including Google Calendar, Apple Calendar, and Microsoft Outlook.\n        </p>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}