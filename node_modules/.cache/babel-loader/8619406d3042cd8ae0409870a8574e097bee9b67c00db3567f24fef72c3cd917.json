{"ast":null,"code":"var _jsxFileName = \"/Users/williamyen/Documents/vscodeProjects/syllabusExtraction/syllabus-extractor/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport * as mammoth from 'mammoth';\nimport { Parser } from 'papaparse';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SyllabusParser() {\n  _s();\n  // Custom CSS styles - Add this at the top of your component\n  const styles = {\n    container: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4\",\n    card: \"max-w-4xl mx-auto bg-white rounded-xl shadow-lg overflow-hidden\",\n    header: \"bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-4 flex items-center\",\n    headerTitle: \"text-2xl font-bold text-white flex-1\",\n    headerIcon: \"text-white h-8 w-8\",\n    body: \"p-6\",\n    stepContainer: \"mb-8 last:mb-0\",\n    stepHeader: \"flex items-center mb-4\",\n    stepNumber: \"flex items-center justify-center h-8 w-8 rounded-full bg-blue-600 text-white font-bold mr-3\",\n    stepTitle: \"text-xl font-semibold text-gray-800\",\n    uploadContainer: \"border-2 border-dashed border-blue-300 rounded-lg p-8 text-center bg-blue-50 hover:bg-blue-100 transition\",\n    uploadButton: \"bg-blue-600 text-white font-medium px-6 py-3 rounded-lg hover:bg-blue-700 transition inline-flex items-center\",\n    fileInfo: \"mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200 flex items-center\",\n    button: {\n      primary: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition flex items-center justify-center\",\n      secondary: \"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-3 px-4 rounded-lg transition flex items-center justify-center\",\n      disabled: \"w-full bg-gray-200 text-gray-400 font-medium py-3 px-4 rounded-lg cursor-not-allowed\"\n    },\n    resultCard: \"bg-white rounded-lg shadow-md p-5 mb-5 border-l-4 border-blue-600\",\n    resultSection: \"mb-6 last:mb-0\",\n    resultTitle: \"text-lg font-semibold text-gray-800 mb-3 flex items-center\",\n    resultItem: \"p-3 bg-gray-50 rounded-md mb-2 last:mb-0 border-l-2 border-blue-400\",\n    downloadButton: \"flex-1 py-3 px-4 rounded-lg transition flex items-center justify-center text-white font-medium\"\n  };\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [extractedEvents, setExtractedEvents] = useState(null);\n  const [processingStep, setProcessingStep] = useState('');\n\n  // Process the uploaded file\n  const handleFileUpload = async e => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n    setFile(uploadedFile);\n    setFileName(uploadedFile.name);\n    setError('');\n    setExtractedText('');\n    setExtractedEvents(null);\n  };\n\n  // Extract text from different file types\n  const extractTextFromFile = async () => {\n    if (!file) {\n      setError('Please upload a file first');\n      return '';\n    }\n    setLoading(true);\n    setProcessingStep('Extracting text from file...');\n    try {\n      let text = '';\n      const fileType = file.name.split('.').pop().toLowerCase();\n      if (fileType === 'pdf') {\n        // Handle PDF files\n        const arrayBuffer = await file.arrayBuffer();\n        const uint8Array = new Uint8Array(arrayBuffer);\n\n        // Direct PDF text extraction\n        const pdfText = await extractPDFText(uint8Array);\n        text = pdfText;\n      } else if (fileType === 'docx') {\n        // Handle DOCX files using Mammoth\n        const arrayBuffer = await file.arrayBuffer();\n        const result = await mammoth.extractRawText({\n          arrayBuffer\n        });\n        text = result.value;\n      } else if (fileType === 'txt') {\n        // Handle plain text files\n        text = await file.text();\n      } else {\n        throw new Error(`Unsupported file type: ${fileType}`);\n      }\n      setExtractedText(text);\n      return text;\n    } catch (err) {\n      setError(`Failed to extract text: ${err.message}`);\n      return '';\n    }\n  };\n\n  // Extract text from PDF using a hypothetical function\n  // In real implementation, you would use a library like pdf.js\n  const extractPDFText = async pdfData => {\n    // This is a placeholder for PDF extraction\n    // We'll use a mock implementation for now since we can't directly integrate pdf.js here\n    return new Promise(resolve => {\n      // Simulate PDF text extraction\n      setTimeout(() => {\n        resolve(\"This is placeholder text extracted from the PDF. In a real implementation, the actual PDF content would be extracted here.\");\n      }, 1000);\n    });\n  };\n\n  // Process the text with a hypothetical LLM to extract events\n  const processWithLLM = async text => {\n    if (!text) return null;\n    setProcessingStep('Analyzing text with language model...');\n    try {\n      // This is where you would send the text to an actual LLM API\n      // For now, we'll simulate the response with a mock function\n      const events = await mockLLMProcessing(text);\n      return events;\n    } catch (err) {\n      setError(`Failed to process with LLM: ${err.message}`);\n      return null;\n    }\n  };\n\n  // Mock LLM processing function\n  const mockLLMProcessing = async text => {\n    // This is a placeholder. In a real implementation, you would call an actual LLM API\n    return new Promise(resolve => {\n      setTimeout(() => {\n        // Simulate LLM processing with sample data\n        resolve({\n          classTimes: [{\n            day: 'MWF',\n            time: '10:00 AM - 11:15 AM',\n            location: 'Science Building 101'\n          }, {\n            day: 'TTH',\n            time: '2:30 PM - 3:45 PM',\n            location: 'Engineering Hall 305'\n          }],\n          assignments: [{\n            name: 'Homework 1',\n            due: '2025-06-01',\n            description: 'Problem set on chapters 1-3'\n          }, {\n            name: 'Project Proposal',\n            due: '2025-06-15',\n            description: 'One-page outline of final project'\n          }, {\n            name: 'Lab Report',\n            due: '2025-06-30',\n            description: 'Write-up of lab experiment results'\n          }],\n          exams: [{\n            name: 'Midterm 1',\n            date: '2025-06-10',\n            time: '10:00 AM - 12:00 PM',\n            location: 'Main Hall 100'\n          }, {\n            name: 'Midterm 2',\n            date: '2025-07-08',\n            time: '10:00 AM - 12:00 PM',\n            location: 'Main Hall 100'\n          }, {\n            name: 'Final Exam',\n            date: '2025-08-05',\n            time: '1:00 PM - 4:00 PM',\n            location: 'University Arena'\n          }],\n          officehours: [{\n            day: 'Monday',\n            time: '1:00 PM - 3:00 PM',\n            location: 'Faculty Office 210'\n          }, {\n            day: 'Thursday',\n            time: '11:00 AM - 12:00 PM',\n            location: 'Online via Zoom'\n          }]\n        });\n      }, 2000);\n    });\n  };\n\n  // Handle the entire process\n  const processFile = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      // Extract text from the file\n      const text = await extractTextFromFile();\n      if (!text) {\n        setLoading(false);\n        return;\n      }\n\n      // Process with LLM\n      const events = await processWithLLM(text);\n      setExtractedEvents(events);\n      setProcessingStep('Complete!');\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  // Convert events to iCal format\n  const generateICalendar = () => {\n    if (!extractedEvents) return '';\n    let icalContent = ['BEGIN:VCALENDAR', 'VERSION:2.0', 'PRODID:-//Syllabus Parser//EN'];\n\n    // Process class times as recurring events\n    extractedEvents.classTimes.forEach((classTime, index) => {\n      // Parse the days\n      const days = parseDays(classTime.day);\n\n      // For each day, create a recurring event\n      days.forEach(day => {\n        const [startTime, endTime] = parseTimeRange(classTime.time);\n\n        // Create a start date for this semester (would come from user input in real app)\n        const startDate = new Date('2025-05-25'); // Example semester start\n\n        // Adjust to the first occurrence of this day\n        while (startDate.getDay() !== dayToNumber(day)) {\n          startDate.setDate(startDate.getDate() + 1);\n        }\n        const dateStr = formatDate(startDate);\n        const eventId = `class-${index}-${day}`;\n        icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Class - ${classTime.day}`, `LOCATION:${classTime.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'RRULE:FREQ=WEEKLY;COUNT=15',\n        // Recurring for 15 weeks\n        'END:VEVENT');\n      });\n    });\n\n    // Process assignments\n    extractedEvents.assignments.forEach((assignment, index) => {\n      const eventId = `assignment-${index}`;\n      const dateStr = assignment.due.replace(/-/g, '');\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Due: ${assignment.name}`, `DESCRIPTION:${assignment.description}`, `DTSTART:${dateStr}T235900`, `DTEND:${dateStr}T235900`, 'END:VEVENT');\n    });\n\n    // Process exams\n    extractedEvents.exams.forEach((exam, index) => {\n      const eventId = `exam-${index}`;\n      const dateStr = exam.date.replace(/-/g, '');\n      const [startTime, endTime] = parseTimeRange(exam.time);\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:${exam.name}`, `LOCATION:${exam.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'END:VEVENT');\n    });\n\n    // Process office hours as recurring events\n    extractedEvents.officehours.forEach((officeHour, index) => {\n      const day = officeHour.day;\n      const [startTime, endTime] = parseTimeRange(officeHour.time);\n\n      // Create a start date for this semester\n      const startDate = new Date('2025-05-25'); // Example semester start\n\n      // Adjust to the first occurrence of this day\n      while (startDate.getDay() !== dayNameToNumber(day)) {\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      const dateStr = formatDate(startDate);\n      const eventId = `officehour-${index}`;\n      icalContent.push('BEGIN:VEVENT', `UID:${eventId}`, `SUMMARY:Office Hours`, `LOCATION:${officeHour.location}`, `DTSTART:${dateStr}T${formatTime(startTime)}`, `DTEND:${dateStr}T${formatTime(endTime)}`, 'RRULE:FREQ=WEEKLY;COUNT=15',\n      // Recurring for 15 weeks\n      'END:VEVENT');\n    });\n    icalContent.push('END:VCALENDAR');\n    return icalContent.join('\\r\\n');\n  };\n\n  // Helper functions for iCal generation\n  const parseDays = dayString => {\n    // Parse day strings like \"MWF\" or \"TTH\"\n    const mapping = {\n      'M': 'Monday',\n      'T': 'Tuesday',\n      'W': 'Wednesday',\n      'TH': 'Thursday',\n      'F': 'Friday'\n    };\n    let days = [];\n    if (dayString === 'MWF') {\n      days = ['Monday', 'Wednesday', 'Friday'];\n    } else if (dayString === 'TTH' || dayString === 'TR') {\n      days = ['Tuesday', 'Thursday'];\n    } else {\n      // Try to parse other formats\n      if (dayString.includes('M')) days.push('Monday');\n      if (dayString.includes('T') && !dayString.includes('TH')) days.push('Tuesday');\n      if (dayString.includes('W')) days.push('Wednesday');\n      if (dayString.includes('TH')) days.push('Thursday');\n      if (dayString.includes('F')) days.push('Friday');\n    }\n    return days;\n  };\n  const parseTimeRange = timeString => {\n    // Parse time strings like \"10:00 AM - 11:15 AM\"\n    const parts = timeString.split('-').map(part => part.trim());\n    if (parts.length !== 2) return ['100000', '110000']; // Default if parsing fails\n\n    try {\n      const startTimeParts = parts[0].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      const endTimeParts = parts[1].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      if (!startTimeParts || !endTimeParts) return ['100000', '110000'];\n      let startHour = parseInt(startTimeParts[1]);\n      let startMinute = startTimeParts[2] ? parseInt(startTimeParts[2]) : 0;\n      const startAmPm = startTimeParts[3] ? startTimeParts[3].toUpperCase() : null;\n      let endHour = parseInt(endTimeParts[1]);\n      let endMinute = endTimeParts[2] ? parseInt(endTimeParts[2]) : 0;\n      const endAmPm = endTimeParts[3] ? endTimeParts[3].toUpperCase() : null;\n\n      // Handle special cases like \"noon\"\n      if (parts[0].toLowerCase().includes('noon')) {\n        startHour = 12;\n        startMinute = 0;\n      }\n\n      // Adjust for AM/PM\n      if (startAmPm === 'PM' && startHour < 12) startHour += 12;\n      if (startAmPm === 'AM' && startHour === 12) startHour = 0;\n      if (endAmPm === 'PM' && endHour < 12) endHour += 12;\n      if (endAmPm === 'AM' && endHour === 12) endHour = 0;\n      const startTimeString = `${startHour.toString().padStart(2, '0')}${startMinute.toString().padStart(2, '0')}00`;\n      const endTimeString = `${endHour.toString().padStart(2, '0')}${endMinute.toString().padStart(2, '0')}00`;\n      return [startTimeString, endTimeString];\n    } catch (e) {\n      return ['100000', '110000']; // Default if parsing fails\n    }\n  };\n  const dayToNumber = day => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[day] || 0;\n  };\n  const dayNameToNumber = dayName => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[dayName] || 0;\n  };\n  const formatDate = date => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}${month}${day}`;\n  };\n  const formatTime = timeString => {\n    // Already in format HHMMSS\n    return timeString;\n  };\n\n  // Download the calendar file\n  const downloadCalendar = () => {\n    const icalContent = generateICalendar();\n    const blob = new Blob([icalContent], {\n      type: 'text/calendar'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_calendar.ics';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download extracted events as JSON\n  const downloadJson = () => {\n    if (!extractedEvents) return;\n    const json = JSON.stringify(extractedEvents, null, 2);\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_events.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.headerTitle,\n          children: \"Syllabus Date Extractor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: styles.headerIcon,\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.body,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stepContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.stepNumber,\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.stepTitle,\n              children: \"Upload Your Syllabus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.uploadContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileUpload,\n              accept: \".pdf,.docx,.txt\",\n              className: \"hidden\",\n              id: \"file-upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"file-upload\",\n              className: styles.uploadButton,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0l-4 4m4-4v12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), \"Choose File\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-3 text-sm text-gray-500\",\n              children: \"PDF, DOCX, or TXT files accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), fileName && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.fileInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 text-blue-500 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-700\",\n                children: fileName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stepContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.stepNumber,\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.stepTitle,\n              children: \"Extract Important Dates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: processFile,\n            disabled: !file || loading,\n            className: !file || loading ? styles.button.disabled : styles.button.primary,\n            children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this), \"Extract Dates from Syllabus\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 rounded-full h-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-600 h-2 rounded-full w-3/4 animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-600 mt-2\",\n              children: processingStep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 p-4 bg-red-50 text-red-700 rounded-lg border border-red-200\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 19\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), extractedEvents && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stepContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepHeader,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.stepNumber,\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: styles.stepTitle,\n              children: \"Review Extracted Events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.resultTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2 text-blue-500\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this), \"Class Schedule\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this), extractedEvents.classTimes.map((classTime, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.resultItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-800\",\n                    children: classTime.day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600\",\n                    children: [classTime.time, \" \", classTime.location && `at ${classTime.location}`]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 546,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this)\n            }, `class-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.resultTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2 text-blue-500\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 19\n              }, this), \"Assignments\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this), extractedEvents.assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.resultItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-800\",\n                    children: assignment.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 566,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600\",\n                    children: [\"Due: \", new Date(assignment.due).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 25\n                  }, this), assignment.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm mt-1\",\n                    children: assignment.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 565,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this)\n            }, `assignment-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.resultTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2 text-blue-500\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), \"Exams & Tests\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), extractedEvents.exams.map((exam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.resultItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-800\",\n                    children: exam.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600\",\n                    children: [new Date(exam.date).toLocaleDateString(), \" at \", exam.time]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 25\n                  }, this), exam.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: exam.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 43\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 21\n              }, this)\n            }, `exam-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.resultSection,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.resultTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2 text-blue-500\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), \"Office Hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), extractedEvents.officehours.map((officeHour, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.resultItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-start\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-800\",\n                    children: officeHour.day\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-600\",\n                    children: officeHour.time\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 25\n                  }, this), officeHour.location && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-gray-500 text-sm\",\n                    children: officeHour.location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 612,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 21\n              }, this)\n            }, `office-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8 flex flex-col md:flex-row gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadCalendar,\n              className: `${styles.downloadButton} bg-blue-600 hover:bg-blue-700`,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 19\n              }, this), \"Download iCalendar (.ics)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: downloadJson,\n              className: `${styles.downloadButton} bg-gray-700 hover:bg-gray-800`,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                className: \"h-5 w-5 mr-2\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: 2,\n                  d: \"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 19\n              }, this), \"Download JSON Data\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this), extractedText && /*#__PURE__*/_jsxDEV(\"details\", {\n          className: \"mt-6 p-4 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            className: \"font-medium text-gray-700 cursor-pointer\",\n            children: \"View Raw Extracted Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 p-3 bg-white rounded border border-gray-200 text-sm font-mono whitespace-pre-wrap max-h-64 overflow-y-auto\",\n            children: extractedText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8 p-5 bg-blue-50 rounded-lg border border-blue-200\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-6 w-6 text-blue-500 mr-3\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-semibold text-blue-800 mb-2\",\n                children: \"How It Works\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-700\",\n                children: \"This tool extracts important dates and schedule information from your syllabus using advanced language processing. It recognizes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc list-inside text-sm mt-2 text-blue-700 ml-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Regular class meeting times (MWF, TTH, etc.)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 659,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Assignment due dates\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Exams, midterms, and finals\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"Office hours\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this);\n}\n_s(SyllabusParser, \"jAuY3GQjyqwj5HHnZ5e7L98zTrA=\");\n_c = SyllabusParser;\nvar _c;\n$RefreshReg$(_c, \"SyllabusParser\");","map":{"version":3,"names":["useState","mammoth","Parser","jsxDEV","_jsxDEV","Fragment","_Fragment","SyllabusParser","_s","styles","container","card","header","headerTitle","headerIcon","body","stepContainer","stepHeader","stepNumber","stepTitle","uploadContainer","uploadButton","fileInfo","button","primary","secondary","disabled","resultCard","resultSection","resultTitle","resultItem","downloadButton","file","setFile","fileName","setFileName","loading","setLoading","error","setError","extractedText","setExtractedText","extractedEvents","setExtractedEvents","processingStep","setProcessingStep","handleFileUpload","e","uploadedFile","target","files","name","extractTextFromFile","text","fileType","split","pop","toLowerCase","arrayBuffer","uint8Array","Uint8Array","pdfText","extractPDFText","result","extractRawText","value","Error","err","message","pdfData","Promise","resolve","setTimeout","processWithLLM","events","mockLLMProcessing","classTimes","day","time","location","assignments","due","description","exams","date","officehours","processFile","generateICalendar","icalContent","forEach","classTime","index","days","parseDays","startTime","endTime","parseTimeRange","startDate","Date","getDay","dayToNumber","setDate","getDate","dateStr","formatDate","eventId","push","formatTime","assignment","replace","exam","officeHour","dayNameToNumber","join","dayString","mapping","includes","timeString","parts","map","part","trim","length","startTimeParts","match","endTimeParts","startHour","parseInt","startMinute","startAmPm","toUpperCase","endHour","endMinute","endAmPm","startTimeString","toString","padStart","endTimeString","dayName","year","getFullYear","month","getMonth","downloadCalendar","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","downloadJson","json","JSON","stringify","className","children","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onChange","accept","id","htmlFor","onClick","cx","cy","r","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/williamyen/Documents/vscodeProjects/syllabusExtraction/syllabus-extractor/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport * as mammoth from 'mammoth';\nimport { Parser } from 'papaparse';\n\nexport default function SyllabusParser() {\n  // Custom CSS styles - Add this at the top of your component\n  const styles = {\n    container: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8 px-4\",\n    card: \"max-w-4xl mx-auto bg-white rounded-xl shadow-lg overflow-hidden\",\n    header: \"bg-gradient-to-r from-blue-600 to-indigo-600 px-6 py-4 flex items-center\",\n    headerTitle: \"text-2xl font-bold text-white flex-1\",\n    headerIcon: \"text-white h-8 w-8\",\n    body: \"p-6\",\n    stepContainer: \"mb-8 last:mb-0\",\n    stepHeader: \"flex items-center mb-4\",\n    stepNumber: \"flex items-center justify-center h-8 w-8 rounded-full bg-blue-600 text-white font-bold mr-3\",\n    stepTitle: \"text-xl font-semibold text-gray-800\",\n    uploadContainer: \"border-2 border-dashed border-blue-300 rounded-lg p-8 text-center bg-blue-50 hover:bg-blue-100 transition\",\n    uploadButton: \"bg-blue-600 text-white font-medium px-6 py-3 rounded-lg hover:bg-blue-700 transition inline-flex items-center\",\n    fileInfo: \"mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200 flex items-center\",\n    button: {\n      primary: \"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition flex items-center justify-center\",\n      secondary: \"w-full bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium py-3 px-4 rounded-lg transition flex items-center justify-center\",\n      disabled: \"w-full bg-gray-200 text-gray-400 font-medium py-3 px-4 rounded-lg cursor-not-allowed\",\n    },\n    resultCard: \"bg-white rounded-lg shadow-md p-5 mb-5 border-l-4 border-blue-600\",\n    resultSection: \"mb-6 last:mb-0\",\n    resultTitle: \"text-lg font-semibold text-gray-800 mb-3 flex items-center\",\n    resultItem: \"p-3 bg-gray-50 rounded-md mb-2 last:mb-0 border-l-2 border-blue-400\",\n    downloadButton: \"flex-1 py-3 px-4 rounded-lg transition flex items-center justify-center text-white font-medium\",\n  };\n\n  \n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [extractedEvents, setExtractedEvents] = useState(null);\n  const [processingStep, setProcessingStep] = useState('');\n\n  // Process the uploaded file\n  const handleFileUpload = async (e) => {\n    const uploadedFile = e.target.files[0];\n    if (!uploadedFile) return;\n\n    setFile(uploadedFile);\n    setFileName(uploadedFile.name);\n    setError('');\n    setExtractedText('');\n    setExtractedEvents(null);\n  };\n\n  // Extract text from different file types\n  const extractTextFromFile = async () => {\n    if (!file) {\n      setError('Please upload a file first');\n      return '';\n    }\n\n    setLoading(true);\n    setProcessingStep('Extracting text from file...');\n\n    try {\n      let text = '';\n      const fileType = file.name.split('.').pop().toLowerCase();\n\n      if (fileType === 'pdf') {\n        // Handle PDF files\n        const arrayBuffer = await file.arrayBuffer();\n        const uint8Array = new Uint8Array(arrayBuffer);\n        \n        // Direct PDF text extraction\n        const pdfText = await extractPDFText(uint8Array);\n        text = pdfText;\n      } else if (fileType === 'docx') {\n        // Handle DOCX files using Mammoth\n        const arrayBuffer = await file.arrayBuffer();\n        const result = await mammoth.extractRawText({ arrayBuffer });\n        text = result.value;\n      } else if (fileType === 'txt') {\n        // Handle plain text files\n        text = await file.text();\n      } else {\n        throw new Error(`Unsupported file type: ${fileType}`);\n      }\n\n      setExtractedText(text);\n      return text;\n    } catch (err) {\n      setError(`Failed to extract text: ${err.message}`);\n      return '';\n    }\n  };\n\n  // Extract text from PDF using a hypothetical function\n  // In real implementation, you would use a library like pdf.js\n  const extractPDFText = async (pdfData) => {\n    // This is a placeholder for PDF extraction\n    // We'll use a mock implementation for now since we can't directly integrate pdf.js here\n    return new Promise((resolve) => {\n      // Simulate PDF text extraction\n      setTimeout(() => {\n        resolve(\"This is placeholder text extracted from the PDF. In a real implementation, the actual PDF content would be extracted here.\");\n      }, 1000);\n    });\n  };\n\n  // Process the text with a hypothetical LLM to extract events\n  const processWithLLM = async (text) => {\n    if (!text) return null;\n    \n    setProcessingStep('Analyzing text with language model...');\n\n    try {\n      // This is where you would send the text to an actual LLM API\n      // For now, we'll simulate the response with a mock function\n      const events = await mockLLMProcessing(text);\n      return events;\n    } catch (err) {\n      setError(`Failed to process with LLM: ${err.message}`);\n      return null;\n    }\n  };\n\n  // Mock LLM processing function\n  const mockLLMProcessing = async (text) => {\n    // This is a placeholder. In a real implementation, you would call an actual LLM API\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        // Simulate LLM processing with sample data\n        resolve({\n          classTimes: [\n            { day: 'MWF', time: '10:00 AM - 11:15 AM', location: 'Science Building 101' },\n            { day: 'TTH', time: '2:30 PM - 3:45 PM', location: 'Engineering Hall 305' }\n          ],\n          assignments: [\n            { name: 'Homework 1', due: '2025-06-01', description: 'Problem set on chapters 1-3' },\n            { name: 'Project Proposal', due: '2025-06-15', description: 'One-page outline of final project' },\n            { name: 'Lab Report', due: '2025-06-30', description: 'Write-up of lab experiment results' }\n          ],\n          exams: [\n            { name: 'Midterm 1', date: '2025-06-10', time: '10:00 AM - 12:00 PM', location: 'Main Hall 100' },\n            { name: 'Midterm 2', date: '2025-07-08', time: '10:00 AM - 12:00 PM', location: 'Main Hall 100' },\n            { name: 'Final Exam', date: '2025-08-05', time: '1:00 PM - 4:00 PM', location: 'University Arena' }\n          ],\n          officehours: [\n            { day: 'Monday', time: '1:00 PM - 3:00 PM', location: 'Faculty Office 210' },\n            { day: 'Thursday', time: '11:00 AM - 12:00 PM', location: 'Online via Zoom' }\n          ]\n        });\n      }, 2000);\n    });\n  };\n\n  // Handle the entire process\n  const processFile = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      // Extract text from the file\n      const text = await extractTextFromFile();\n      if (!text) {\n        setLoading(false);\n        return;\n      }\n      \n      // Process with LLM\n      const events = await processWithLLM(text);\n      setExtractedEvents(events);\n      \n      setProcessingStep('Complete!');\n      setLoading(false);\n    } catch (err) {\n      setError(`Processing failed: ${err.message}`);\n      setLoading(false);\n    }\n  };\n\n  // Convert events to iCal format\n  const generateICalendar = () => {\n    if (!extractedEvents) return '';\n\n    let icalContent = [\n      'BEGIN:VCALENDAR',\n      'VERSION:2.0',\n      'PRODID:-//Syllabus Parser//EN'\n    ];\n\n    // Process class times as recurring events\n    extractedEvents.classTimes.forEach((classTime, index) => {\n      // Parse the days\n      const days = parseDays(classTime.day);\n      \n      // For each day, create a recurring event\n      days.forEach(day => {\n        const [startTime, endTime] = parseTimeRange(classTime.time);\n        \n        // Create a start date for this semester (would come from user input in real app)\n        const startDate = new Date('2025-05-25'); // Example semester start\n        \n        // Adjust to the first occurrence of this day\n        while (startDate.getDay() !== dayToNumber(day)) {\n          startDate.setDate(startDate.getDate() + 1);\n        }\n        \n        const dateStr = formatDate(startDate);\n        const eventId = `class-${index}-${day}`;\n        \n        icalContent.push(\n          'BEGIN:VEVENT',\n          `UID:${eventId}`,\n          `SUMMARY:Class - ${classTime.day}`,\n          `LOCATION:${classTime.location}`,\n          `DTSTART:${dateStr}T${formatTime(startTime)}`,\n          `DTEND:${dateStr}T${formatTime(endTime)}`,\n          'RRULE:FREQ=WEEKLY;COUNT=15', // Recurring for 15 weeks\n          'END:VEVENT'\n        );\n      });\n    });\n\n    // Process assignments\n    extractedEvents.assignments.forEach((assignment, index) => {\n      const eventId = `assignment-${index}`;\n      const dateStr = assignment.due.replace(/-/g, '');\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:Due: ${assignment.name}`,\n        `DESCRIPTION:${assignment.description}`,\n        `DTSTART:${dateStr}T235900`,\n        `DTEND:${dateStr}T235900`,\n        'END:VEVENT'\n      );\n    });\n\n    // Process exams\n    extractedEvents.exams.forEach((exam, index) => {\n      const eventId = `exam-${index}`;\n      const dateStr = exam.date.replace(/-/g, '');\n      const [startTime, endTime] = parseTimeRange(exam.time);\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:${exam.name}`,\n        `LOCATION:${exam.location}`,\n        `DTSTART:${dateStr}T${formatTime(startTime)}`,\n        `DTEND:${dateStr}T${formatTime(endTime)}`,\n        'END:VEVENT'\n      );\n    });\n\n    // Process office hours as recurring events\n    extractedEvents.officehours.forEach((officeHour, index) => {\n      const day = officeHour.day;\n      const [startTime, endTime] = parseTimeRange(officeHour.time);\n      \n      // Create a start date for this semester\n      const startDate = new Date('2025-05-25'); // Example semester start\n      \n      // Adjust to the first occurrence of this day\n      while (startDate.getDay() !== dayNameToNumber(day)) {\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      \n      const dateStr = formatDate(startDate);\n      const eventId = `officehour-${index}`;\n      \n      icalContent.push(\n        'BEGIN:VEVENT',\n        `UID:${eventId}`,\n        `SUMMARY:Office Hours`,\n        `LOCATION:${officeHour.location}`,\n        `DTSTART:${dateStr}T${formatTime(startTime)}`,\n        `DTEND:${dateStr}T${formatTime(endTime)}`,\n        'RRULE:FREQ=WEEKLY;COUNT=15', // Recurring for 15 weeks\n        'END:VEVENT'\n      );\n    });\n\n    icalContent.push('END:VCALENDAR');\n    return icalContent.join('\\r\\n');\n  };\n\n  // Helper functions for iCal generation\n  const parseDays = (dayString) => {\n    // Parse day strings like \"MWF\" or \"TTH\"\n    const mapping = {\n      'M': 'Monday',\n      'T': 'Tuesday',\n      'W': 'Wednesday',\n      'TH': 'Thursday',\n      'F': 'Friday'\n    };\n    \n    let days = [];\n    if (dayString === 'MWF') {\n      days = ['Monday', 'Wednesday', 'Friday'];\n    } else if (dayString === 'TTH' || dayString === 'TR') {\n      days = ['Tuesday', 'Thursday'];\n    } else {\n      // Try to parse other formats\n      if (dayString.includes('M')) days.push('Monday');\n      if (dayString.includes('T') && !dayString.includes('TH')) days.push('Tuesday');\n      if (dayString.includes('W')) days.push('Wednesday');\n      if (dayString.includes('TH')) days.push('Thursday');\n      if (dayString.includes('F')) days.push('Friday');\n    }\n    \n    return days;\n  };\n\n  const parseTimeRange = (timeString) => {\n    // Parse time strings like \"10:00 AM - 11:15 AM\"\n    const parts = timeString.split('-').map(part => part.trim());\n    if (parts.length !== 2) return ['100000', '110000']; // Default if parsing fails\n    \n    try {\n      const startTimeParts = parts[0].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      const endTimeParts = parts[1].match(/(\\d+)(?::(\\d+))?\\s*(AM|PM)?/i);\n      \n      if (!startTimeParts || !endTimeParts) return ['100000', '110000'];\n      \n      let startHour = parseInt(startTimeParts[1]);\n      let startMinute = startTimeParts[2] ? parseInt(startTimeParts[2]) : 0;\n      const startAmPm = startTimeParts[3] ? startTimeParts[3].toUpperCase() : null;\n      \n      let endHour = parseInt(endTimeParts[1]);\n      let endMinute = endTimeParts[2] ? parseInt(endTimeParts[2]) : 0;\n      const endAmPm = endTimeParts[3] ? endTimeParts[3].toUpperCase() : null;\n      \n      // Handle special cases like \"noon\"\n      if (parts[0].toLowerCase().includes('noon')) {\n        startHour = 12;\n        startMinute = 0;\n      }\n      \n      // Adjust for AM/PM\n      if (startAmPm === 'PM' && startHour < 12) startHour += 12;\n      if (startAmPm === 'AM' && startHour === 12) startHour = 0;\n      if (endAmPm === 'PM' && endHour < 12) endHour += 12;\n      if (endAmPm === 'AM' && endHour === 12) endHour = 0;\n      \n      const startTimeString = `${startHour.toString().padStart(2, '0')}${startMinute.toString().padStart(2, '0')}00`;\n      const endTimeString = `${endHour.toString().padStart(2, '0')}${endMinute.toString().padStart(2, '0')}00`;\n      \n      return [startTimeString, endTimeString];\n    } catch (e) {\n      return ['100000', '110000']; // Default if parsing fails\n    }\n  };\n\n  const dayToNumber = (day) => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[day] || 0;\n  };\n  \n  const dayNameToNumber = (dayName) => {\n    const days = {\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6,\n      'Sunday': 0\n    };\n    return days[dayName] || 0;\n  };\n\n  const formatDate = (date) => {\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    return `${year}${month}${day}`;\n  };\n\n  const formatTime = (timeString) => {\n    // Already in format HHMMSS\n    return timeString;\n  };\n\n  // Download the calendar file\n  const downloadCalendar = () => {\n    const icalContent = generateICalendar();\n    const blob = new Blob([icalContent], { type: 'text/calendar' });\n    const url = URL.createObjectURL(blob);\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_calendar.ics';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  // Download extracted events as JSON\n  const downloadJson = () => {\n    if (!extractedEvents) return;\n    \n    const json = JSON.stringify(extractedEvents, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    \n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'syllabus_events.json';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.card}>\n        {/* Header */}\n        <div className={styles.header}>\n          <h1 className={styles.headerTitle}>Syllabus Date Extractor</h1>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles.headerIcon} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n          </svg>\n        </div>\n        \n        <div className={styles.body}>\n          {/* Step 1: Upload */}\n          <div className={styles.stepContainer}>\n            <div className={styles.stepHeader}>\n              <span className={styles.stepNumber}>1</span>\n              <h2 className={styles.stepTitle}>Upload Your Syllabus</h2>\n            </div>\n            \n            <div className={styles.uploadContainer}>\n              <input\n                type=\"file\"\n                onChange={handleFileUpload}\n                accept=\".pdf,.docx,.txt\"\n                className=\"hidden\"\n                id=\"file-upload\"\n              />\n              <label htmlFor=\"file-upload\" className={styles.uploadButton}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0l-4 4m4-4v12\" />\n                </svg>\n                Choose File\n              </label>\n              <p className=\"mt-3 text-sm text-gray-500\">PDF, DOCX, or TXT files accepted</p>\n              \n              {fileName && (\n                <div className={styles.fileInfo}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-blue-500 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                  <span className=\"font-medium text-gray-700\">{fileName}</span>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          {/* Step 2: Process */}\n          <div className={styles.stepContainer}>\n            <div className={styles.stepHeader}>\n              <span className={styles.stepNumber}>2</span>\n              <h2 className={styles.stepTitle}>Extract Important Dates</h2>\n            </div>\n            \n            <button\n              onClick={processFile}\n              disabled={!file || loading}\n              className={!file || loading ? styles.button.disabled : styles.button.primary}\n            >\n              {loading ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Processing...\n                </>\n              ) : (\n                <>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                  </svg>\n                  Extract Dates from Syllabus\n                </>\n              )}\n            </button>\n            \n            {loading && (\n              <div className=\"mt-4\">\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div className=\"bg-blue-600 h-2 rounded-full w-3/4 animate-pulse\"></div>\n                </div>\n                <p className=\"text-sm text-gray-600 mt-2\">{processingStep}</p>\n              </div>\n            )}\n            \n            {error && (\n              <div className=\"mt-4 p-4 bg-red-50 text-red-700 rounded-lg border border-red-200\">\n                <div className=\"flex\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  {error}\n                </div>\n              </div>\n            )}\n          </div>\n          \n          {/* Step 3: Results (conditional rendering) */}\n          {extractedEvents && (\n            <div className={styles.stepContainer}>\n              <div className={styles.stepHeader}>\n                <span className={styles.stepNumber}>3</span>\n                <h2 className={styles.stepTitle}>Review Extracted Events</h2>\n              </div>\n              \n              {/* Class Times */}\n              <div className={styles.resultSection}>\n                <h3 className={styles.resultTitle}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  Class Schedule\n                </h3>\n                \n                {extractedEvents.classTimes.map((classTime, index) => (\n                  <div key={`class-${index}`} className={styles.resultItem}>\n                    <div className=\"flex items-center\">\n                      <div className=\"flex-1\">\n                        <span className=\"font-medium text-gray-800\">{classTime.day}</span>\n                        <p className=\"text-gray-600\">{classTime.time} {classTime.location && `at ${classTime.location}`}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Assignments */}\n              <div className={styles.resultSection}>\n                <h3 className={styles.resultTitle}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                  </svg>\n                  Assignments\n                </h3>\n                \n                {extractedEvents.assignments.map((assignment, index) => (\n                  <div key={`assignment-${index}`} className={styles.resultItem}>\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-1\">\n                        <span className=\"font-medium text-gray-800\">{assignment.name}</span>\n                        <p className=\"text-gray-600\">Due: {new Date(assignment.due).toLocaleDateString()}</p>\n                        {assignment.description && <p className=\"text-gray-500 text-sm mt-1\">{assignment.description}</p>}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Exams */}\n              <div className={styles.resultSection}>\n                <h3 className={styles.resultTitle}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  Exams & Tests\n                </h3>\n                \n                {extractedEvents.exams.map((exam, index) => (\n                  <div key={`exam-${index}`} className={styles.resultItem}>\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-1\">\n                        <span className=\"font-medium text-gray-800\">{exam.name}</span>\n                        <p className=\"text-gray-600\">{new Date(exam.date).toLocaleDateString()} at {exam.time}</p>\n                        {exam.location && <p className=\"text-gray-500 text-sm\">{exam.location}</p>}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Office Hours */}\n              <div className={styles.resultSection}>\n                <h3 className={styles.resultTitle}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                  </svg>\n                  Office Hours\n                </h3>\n                \n                {extractedEvents.officehours.map((officeHour, index) => (\n                  <div key={`office-${index}`} className={styles.resultItem}>\n                    <div className=\"flex items-start\">\n                      <div className=\"flex-1\">\n                        <span className=\"font-medium text-gray-800\">{officeHour.day}</span>\n                        <p className=\"text-gray-600\">{officeHour.time}</p>\n                        {officeHour.location && <p className=\"text-gray-500 text-sm\">{officeHour.location}</p>}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              {/* Download options */}\n              <div className=\"mt-8 flex flex-col md:flex-row gap-4\">\n                <button onClick={downloadCalendar} className={`${styles.downloadButton} bg-blue-600 hover:bg-blue-700`}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                  </svg>\n                  Download iCalendar (.ics)\n                </button>\n                <button onClick={downloadJson} className={`${styles.downloadButton} bg-gray-700 hover:bg-gray-800`}>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\" />\n                  </svg>\n                  Download JSON Data\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Extracted Text (Hidden by default) */}\n          {extractedText && (\n            <details className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n              <summary className=\"font-medium text-gray-700 cursor-pointer\">View Raw Extracted Text</summary>\n              <div className=\"mt-3 p-3 bg-white rounded border border-gray-200 text-sm font-mono whitespace-pre-wrap max-h-64 overflow-y-auto\">\n                {extractedText}\n              </div>\n            </details>\n          )}\n          \n          {/* Help/Information section */}\n          <div className=\"mt-8 p-5 bg-blue-50 rounded-lg border border-blue-200\">\n            <div className=\"flex\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-blue-500 mr-3\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <div>\n                <h3 className=\"font-semibold text-blue-800 mb-2\">How It Works</h3>\n                <p className=\"text-sm text-blue-700\">\n                  This tool extracts important dates and schedule information from your syllabus using advanced language processing. It recognizes:\n                </p>\n                <ul className=\"list-disc list-inside text-sm mt-2 text-blue-700 ml-2\">\n                  <li>Regular class meeting times (MWF, TTH, etc.)</li>\n                  <li>Assignment due dates</li>\n                  <li>Exams, midterms, and finals</li>\n                  <li>Office hours</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}